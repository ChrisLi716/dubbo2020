<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://dubbo.apache.org/schema/dubbo
       http://dubbo.apache.org/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.chris.order.service.impl"/>

    <!--指定当前服务名称，不要和别的服务名称重复 -->
    <dubbo:application name="order-service-consumer"/>

    <!--指定注册中心位置
        check: 检查注册中心是否存在，默认为true,即检查/>
    -->
    <dubbo:registry address="zookeeper://master:2181" check="false"/>
    <!--<dubbo:registry protocol="zookeeper" address="master:2181"/>-->

    <!--指定dubbo协议在20080端口暴露服务-->
    <dubbo:protocol name="dubbo" port="10080"/>

    <!--
    <dubbo:service id="orderService" interface="com.chris.dubbo.service.OrderService" ref="orderServiceImpl"/>
    <bean id="orderServiceImpl" class="com.chris.dubbo.service.OrderService"/>
    -->

    <!-- interface：声明要调用的远程服务的接口:生成远程服务代理
         check: 检查消费者依赖的服务提供者是否存在，默认为true,即检查，check="false"等同于<dubbo:consumer check="false"/>
         timeout：用的是消费者统一配置dubbo:consumer的timeout 默认为1秒超时
         dubbo:method: 指向服务提供方暴露的某个方法，timeout对此方法设置在消费端的等待时间
         retries: 服务重试次数，不包括第一次调用， 如果 retries="3"表示第一次调用失败后会再调用三次
         version：声名使用服务提供者的哪个版本的接口
         stub ：指向引用接口UserService的本地存根接口UserServiceStub
     -->
    <dubbo:reference id="userService" interface="com.chris.dubbo.service.UserService" check="false" timeout="7000"
                     retries="3" version="0.0.2" stub="com.chris.dubbo.service.stub.UserServiceStub">
        <!--<dubbo:method name="getUserAddressList" timeout="5000"/>-->
    </dubbo:reference>

    <!--配置当前消费者的全局统一规则，
        check：设置当前消费端所有的服务是否启动时检查
        timeout：设置当前消费端所有服务的超时时间
     -->
    <dubbo:consumer check="false" timeout="2000"/>

</beans>